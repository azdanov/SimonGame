@import "ripple";

* {
  box-sizing: border-box;
  user-select: none;
}

main {
  position: relative;
  margin: auto;
}

body {
  margin: 0;
  background-color: #424242;
  height: 100vh;
  display: flex;
  align-items: center;
  overflow: hidden;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif;
}

.game {
  position: relative;
  margin-top: 10px;
  transition: all 150ms ease-in;
}

.pad {
  position: relative;
  display: inline-block;
  width: 10px;
  height: 10px;

  &.active {
    width: calc(100vw / 2 - 10px);
    height: calc(100vw / 2 - 10px);
  }

  transition: width .2s, height .2s;

  &:nth-of-type(1) {
    margin-right: -5px;
  }
}

@mixin centerVerticalHorizontal() {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.row {
  display: block;
  text-align: center;

  &:first-child {
    padding-top: 5px;
    margin-bottom: -10px;
  }
}

$yellow: #fbc02d;
$blue: #1e88e5;
$green: #43a047;
$red: #e53935;
$border: lighten(#eee, 5%);
$info: $border;
$border-size-outer: 10px;
$border-size-inner: 5px;

@mixin setActions($baseColor) {
  background-color: $baseColor;

  @if $baseColor == $border {
    $baseColor: darken($baseColor, 4%)
  }

  &:hover {
    background-color: desaturate($baseColor, 15%);
    cursor: pointer;
  }

  &:active,
  &.playing {
    background-color: desaturate($baseColor, 30%);
  }
}

.info {
  @include centerVerticalHorizontal;
  background-color: $border;
  width: calc(100vw / 4);
  height: calc(100vw / 4);
  border-radius: 100%;
  text-align: center;
  line-height: calc(100vw / 4);
  font-size: calc(100vw / 13);
  user-select: none;
  font-weight: bold;
  cursor: default;
}

.button {
  @include setActions($info);
}

.count {
  font-size: calc(100vw / 8);
}

.yellow {
  @include setActions($yellow);
  border-radius: 0 0 0 50%;
  border: $border $border-size-outer solid;
  border-top-width: $border-size-inner;
  border-right-width: $border-size-inner;
}

.blue {
  @include setActions(blue);
  border-radius: 0 0 50% 0;
  border: $border $border-size-outer solid;
  border-top-width: $border-size-inner;
  border-left-width: $border-size-inner;
}

.green {
  @include setActions(green);
  border-radius: 50% 0 0 0;
  border: $border $border-size-outer solid;
  border-bottom-width: $border-size-inner;
  border-right-width: $border-size-inner;
}

.red {
  @include setActions(red);
  border-radius: 0 50% 0 0;
  border: $border $border-size-outer solid;
  border-bottom-width: $border-size-inner;
  border-left-width: $border-size-inner;

}

.controls {
  border-radius: 10%;
  position: fixed;
  top: calc(50% - 100px);
  left: -50%;
  margin: 0 0 0 -50vw;
  transition: all 150ms ease-in;
  background-color: $border;
  padding: 30px;

  label {
    margin-top: 20px;
    display: block;
    font-size: 2.2rem;
  }
}

#navigation + label {
  display: none;
  font-family: 'helvetica neue', helvetica, arial, sans-serif;
  font-weight: 700;
  background: #1ea1b8;
  width: 60px;
  height: 51px;
  color: #fff;
  text-align: center;
  font-size: 4rem;
  line-height: 51px;
  position: fixed;
  top: 10px;
  right: 10px;
  transition: all 150ms ease-in;
  border-radius: 10%
}

#navigation {
  display: none;
}

#navigation:checked ~ .controls {
  margin: 0;
  left: calc(50% - 90px);
}

#navigation:checked ~ .game {
  transform: translate3d(100vw, 0, 0);
}

button {
  color: black;
  text-decoration: none;
  padding: 5px 10px;
  border-radius: 3px;
  font-size: 2em;
  background: $border;
  &:hover {
    background: darken($border, 4%);
  }
  &:active {
    background: darken($border, 15%);
  }
}

@mixin css-checkbox(
  $size: '16px',
  $selectedColor: #444,
  $checkColor: #FFF,
  $valign: 'middle',
  $rounded: rounded
) {
  display: none;

  &:checked + i {
    background: #{$selectedColor};
    border-color: #{$selectedColor};

    &:hover:after {
      opacity: 1;
    }

    &:after {
      opacity: 1;
      border-color: #{$checkColor};
    }
  }

  + i {
    box-sizing: border-box;
    &:before, &:after {
      box-sizing: border-box;
    }
  }
  + i {
    position: relative;
    display: inline-block;
    top: -1px;
    width: #{$size};
    height: #{$size};
    margin: 0;
    vertical-align: #{$valign};
    border: 1px solid #999;
    transition: background 200ms ease;

    @if $rounded == "circle" {
      border-radius: 10em;
    } @else if $rounded == "rounded" {
      border-radius: .2em;
    } @else {
      border-radius: 0;
    }

    background: #F9F9F9;
    font-size: #{$size};
    cursor: pointer;

    &:hover:after {
      opacity: .2;
    }

    &:after {
      content: '';
      opacity: 0;
      transform: translateZ(1px) rotate(-45deg);
      outline: 1px solid transparent; // hack to prevent antialias atrifacts in firefox
      position: absolute;
      top: 22%;
      left: 15%;
      width: .68em;
      height: .4em;
      border: .15em solid #222;
      border-top: none;
      border-right: none;
      background: rgba(0, 0, 0, 0);
    }
  }
}

.css-checkbox {
  @include css-checkbox(40px, $selectedColor: #2980b9, $checkColor: papayawhip, $rounded: circle);
}

$desktop: 650px;

@media (min-width: $desktop) {
  main {
    width: $desktop;
    margin: auto;
  }

  .pad {
    &.active {
      width: calc(#{$desktop} / 2 - 10px);
      height: calc(#{$desktop} / 2 - 10px);
    }
  }

  .info {
    width: 162.5px;
    height: 162.5px;
    line-height: 160px;
    font-size: 3rem;
  }

  .count {
    font-size: 5rem;
  }
}
